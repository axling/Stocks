<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" >
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" >
  <head>
    <title>Stocks</title>
    <meta http-equiv="content-type" content="text/html;charset=utf-8" />
    <link rel="stylesheet" href="../css/layout.css" type="text/css" />
    <link rel="stylesheet" href="../css/menu.css" type="text/css" />
    <link rel="stylesheet" href="../css/tables.css" type="text/css" />
    <link rel="stylesheet" href="../css/general.css" type="text/css" />
  </head>
  <body>
    <div id="pagewidth" >
      <div id="header" >
	<div id="headline">Stocks</div>
	<erl>
out(A) ->
    {ehtml, [{ul, [{class, "menu"}], 
	      [{li, [], 
		[{a, [{href, "admin.yaws"}], [{span, [], ["Admin"]}]}]}
	       ]}]}.
	</erl>
      </div>
      <div id="wrapper" class="clearfix" >
	<div id="twocols" class="clearfix"> 
	  <div id="maincol" >
	    <erl>
-include("include/mnesia_defs.hrl").
-include_lib("stdlib/include/qlc.hrl").
out(A) ->
    QueryList = yaws_api:parse_query(A),
    ContentState = content_handler:dump(),
    UpdatingState =
	if length(element(3,ContentState)) > 0 ->
		updating,
		"System is updating";
	   true ->
		not_updating,
		Update = list_to_atom(proplists:get_value("update", QueryList, 
							  "false")),
		if Update ->
			content_handler:update_content(),
			"System is updating";
		   true ->
			{a, [{href, "admin.yaws?" ++ 
			      make_query_string(
				lists:keystore("update", 1, QueryList,
					       {"update", "true"}))}],
			 ["Update Content"]}
		end
	end,
    
    {ehtml, [UpdatingState]}.

make_query_string(QueryList) ->
    string:join(
      lists:map(
	fun({Key, Val}) ->
		lists:concat([Key, "=", Val])
	end, QueryList),
      "&amp;").

	</erl>
        </div>
<div id="rightcol" ></div>
	    </div> 
<div id="leftcol" ></div>
</div>
	<div id="footer" >
	</div>
	</div>
</body>

</html>
